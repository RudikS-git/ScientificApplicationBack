2022-05-08 01:29:12.944 +04:00 [WRN] The entity type 'PersonName' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2022-05-08 01:29:14.138 +04:00 [WRN] Role null validation failed: DuplicateRoleName.
2022-05-08 01:29:14.159 +04:00 [WRN] Role null validation failed: DuplicateRoleName.
2022-05-08 01:29:14.162 +04:00 [WRN] Role null validation failed: DuplicateRoleName.
2022-05-08 01:29:14.319 +04:00 [INF] Starting web host
2022-05-08 01:29:14.676 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2022-05-08 01:29:14.676 +04:00 [INF] Hosting environment: Development
2022-05-08 01:29:14.676 +04:00 [INF] Content root path: C:\Users\rudik\source\repos\ScienceResearchPA\ScienceResearchPA
2022-05-08 01:29:16.505 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2022-05-08 02:25:06.555 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
